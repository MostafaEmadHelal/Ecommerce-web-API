[
  {
    "ContainingType": "Ecom.API.Controllers.AccountController",
    "Method": "Active",
    "RelativePath": "api/Account/active-account",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "activeAccountDTO",
        "Type": "Ecom.Core.DTO.ActiveAccountDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/Account/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDTO",
        "Type": "Ecom.Core.DTO.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/Account/Register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDTO",
        "Type": "Ecom.Core.DTO.RegisterDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.AccountController",
    "Method": "Forget",
    "RelativePath": "api/Account/send-email-forget-password",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "email",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.BasketsController",
    "Method": "Delete",
    "RelativePath": "api/Baskets/delete-basket-item/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.BasketsController",
    "Method": "Get",
    "RelativePath": "api/Baskets/get-basket-item/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.BasketsController",
    "Method": "Add",
    "RelativePath": "api/Baskets/update-basket",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerBasket",
        "Type": "Ecom.Core.Entities.CustomerBasket",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.CategotyController",
    "Method": "AddCategory",
    "RelativePath": "api/Categoty/add-category",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDTO",
        "Type": "Ecom.Core.DTO.CategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.CategotyController",
    "Method": "DeleteCatergory",
    "RelativePath": "api/Categoty/delete-category/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.CategotyController",
    "Method": "Get",
    "RelativePath": "api/Categoty/get-all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.CategotyController",
    "Method": "GetById",
    "RelativePath": "api/Categoty/get-by-id/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.CategotyController",
    "Method": "UpdateCategory",
    "RelativePath": "api/Categoty/update-category",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateCategoryDTO",
        "Type": "Ecom.Core.DTO.UpdateCategoryDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.ProductController",
    "Method": "AddPorduct",
    "RelativePath": "api/Product/Add-Product",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NewPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "OldPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "CategoryID",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Photos",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.ProductController",
    "Method": "DeleteProduct",
    "RelativePath": "api/Product/Delete-Product/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.ProductController",
    "Method": "Get",
    "RelativePath": "api/Product/get-all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "sort",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "CategotyId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "MaxPageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Search",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.ProductController",
    "Method": "GetById",
    "RelativePath": "api/Product/get-by-id/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.ProductController",
    "Method": "UpdateProduct",
    "RelativePath": "api/Product/Update-Product",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Name",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Description",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "NewPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "OldPrice",
        "Type": "System.Decimal",
        "IsRequired": false
      },
      {
        "Name": "CategoryID",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Photos",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Ecom.API.Controllers.ErrorController",
    "Method": "Error",
    "RelativePath": "errors/{statusCode}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "statusCode",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]